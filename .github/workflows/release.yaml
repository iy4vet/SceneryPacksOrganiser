name: Build and Release Executables

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          # Build for Ubuntu
          - os: ubuntu-latest
            artifact-name: ubuntu
            pyinstaller-args: ""
          # Build for Windows x64
          - os: windows-latest
            artifact-name: windows-x64
            pyinstaller-args: ""
          # Build for macOS (Intel)
          - os: macos-latest
            artifact-name: macos-intel
            pyinstaller-args: ""
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install PyInstaller
        run: pip install pyinstaller

      - name: Build Executable
        shell: bash
        env:
          PYINSTALLER_ARGS: ${{ matrix.pyinstaller-args }}
          CURRENT_OS: ${{ matrix.os }}
        run: |
          pip install -r requirements.txt
          # OS-specific dependencies
          if [[ "$CURRENT_OS" == "windows-latest" ]]; then
            pip install pywin32
          elif [[ "$CURRENT_OS" == "macos-latest" ]]; then
            pip install pyobjc
          fi
          # Build onefile executable and collect dependencies
          python -m PyInstaller --onefile --collect-all psutil --collect-all py7zr --collect-all pycryptodomex --collect-all PyYAML organiser.py $PYINSTALLER_ARGS
          ls -l dist/organiser*

      - name: Upload Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact-name }}-build
          path: dist/organiser*

  release:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v3

      - name: Download Build Artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./build

      - name: Rename Artifacts
        shell: bash
        run: |
          # Windows artifact: rename to organiser_windows-x64.exe
          if [ -f "build/windows-x64-build/organiser.exe" ]; then
            mv build/windows-x64-build/organiser.exe build/organiser_windows-x64.exe
          fi
          # Ubuntu artifact: rename to organiser_ubuntu
          if [ -f "build/ubuntu-build/organiser" ]; then
            mv build/ubuntu-build/organiser build/organiser_ubuntu
          fi
          # macOS artifact: rename to organiser_macos-intel
          if [ -f "build/macos-intel-build/organiser" ]; then
            mv build/macos-intel-build/organiser build/organiser_macos-intel
          fi

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            build/organiser_windows-x64.exe
            build/organiser_ubuntu
            build/organiser_macos-intel
          prerelease: ${{ contains(github.ref_name, '-') }}
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          token: ${{ secrets.GH_RELEASE_TOKEN }}
